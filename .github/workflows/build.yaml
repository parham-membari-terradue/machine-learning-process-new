name: build
on:
  push:
    branches:
      - master
      - main
    paths:
      - 'inference/**'
      - .github/**
      - 'training/**'
      - codemeta.json

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.x
      - run: pip install cwltool
      - run: cwltool --validate training/app-package/tile-sat-training.cwl
      - run: cwltool --validate inference/app-package/tile-sat-inference.cwl

  version:
    needs: validate
    runs-on: ubuntu-latest
    outputs:
      app-version: ${{ steps.set-version.outputs.version }}
    steps:
      - uses: actions/checkout@v2
      - run: echo "APP_VERSION=$(cat codemeta.json | jq -r .version )" >> $GITHUB_ENV
      - run: echo "App version is $APP_VERSION"
      - id: set-version
        run: echo "version=${APP_VERSION}" >> $GITHUB_ENV

  container-build:
    needs: version
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - step: training
            path: make-ml-model
          - step: inference
            path: make-inference

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Print version
        run: echo "Version: ${{ env.version }}"

      - name: Authenticate to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build & Push Docker Image
        run: |
          IMAGE_ID=ghcr.io/parham-membari-terradue/machine-learning-process-new/${{ matrix.step }}
          DOCKERFILE_PATH=${{ matrix.step }}/${{ matrix.path }}/Dockerfile
          CONTEXT_PATH=${{ matrix.step }}/${{ matrix.path }}

          echo "Building Docker image from: $DOCKERFILE_PATH"

          docker build "$CONTEXT_PATH" --file "$DOCKERFILE_PATH" --tag "${{ matrix.step }}"
          docker tag "${{ matrix.step }}" "$IMAGE_ID:${{ env.version }}"
          docker push "$IMAGE_ID:${{ env.version }}"

  create-release:
    needs:
      - container-build
      - version
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.set-upload-url.outputs.upload_url }}

    steps:
      - name: Create GitHub Release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: ${{ env.version }}
          tag_name: ${{ env.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - id: set-upload-url
        run: echo "upload_url=${{ steps.create_release.outputs.upload_url }}" >> $GITHUB_ENV

  publish-artifacts:
    needs:
      - create-release
      - version
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: tile-sat-training
            path: training/app-package/tile-sat-training.cwl
          - name: tile-sat-inference
            path: inference/app-package/tile-sat-inference.cwl

    steps:
      - uses: actions/checkout@v2

      - name: Update CWL files with Docker Image Tags
        run: |
          for step in training inference
          do
            tag="ghcr.io/parham-membari-terradue/machine-learning-process-new/${step}:${{ env.version }}"
            docker pull ${tag}
            shatag=$( docker inspect ${tag} | yq -r '.[0]["RepoDigests"][0]' )
            cwl_path="${{ matrix.path }}"
            s="${step}" t="${shatag}" yq -i eval '(.$graph[] | select (.id == env(s)) ).hints.DockerRequirement.dockerPull
